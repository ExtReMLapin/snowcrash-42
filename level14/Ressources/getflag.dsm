;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2018-05-15 10:30:16
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8048444 -- 0x804844c
0x8048444:   53                        	push ebx
0x8048445:   83 ec 08                  	sub esp, 0x8
0x8048448:   e8 00 00 00 00            	call 0x804844d <function_804844d>
; function: function_804844d at 0x804844d -- 0x8048471
0x804844d:   5b                        	pop ebx
0x804844e:   81 c3 a7 2b 00 00         	add ebx, 0x2ba7
0x8048454:   8b 83 fc ff ff ff         	mov eax, dword [ ebx + 0xfffffffc ]
0x804845a:   85 c0                     	test eax, eax
0x804845c:   74 05                     	jz 0x8048463 <function_804844d+0x16>
0x804845e:   e8 8d 00 00 00            	call 0x80484f0 <__gmon_start>
0x8048463:   e8 78 01 00 00            	call 0x80485e0 <frame_dummy>
0x8048468:   e8 e3 0a 00 00            	call 0x8048f50 <__do_global_ctors_aux>
0x804846d:   83 c4 08                  	add esp, 0x8
0x8048470:   5b                        	pop ebx
0x8048471:   c3                        	ret
; section: .plt
; function: function_8048480 at 0x8048480 -- 0x804854f
0x8048480:   ff 35 f8 af 04 08         	push dword [ 0x804aff8 ]
0x8048486:   ff 25 fc af 04 08         	jmp dword [ 0x804affc ]
0x804848c:   00 00                     	add byte [ eax ], al
0x804848e:   00 00                     	add byte [ eax ], al
0x8048490:   ff 25 00 b0 04 08         	jmp dword [ 0x804b000 ]
0x8048496:   68 00 00 00 00            	push 0x0
0x804849b:   e9 e0 ff ff ff            	jmp 0xffffffe0
0x80484a0:   ff 25 04 b0 04 08         	jmp dword [ 0x804b004 ]
0x80484a6:   68 08 00 00 00            	push 0x8
0x80484ab:   e9 d0 ff ff ff            	jmp 0xffffffd0
0x80484b0:   ff 25 08 b0 04 08         	jmp dword [ 0x804b008 ]
0x80484b6:   68 10 00 00 00            	push 0x10
0x80484bb:   e9 c0 ff ff ff            	jmp 0xffffffc0
0x80484c0:   ff 25 0c b0 04 08         	jmp dword [ 0x804b00c ]
0x80484c6:   68 18 00 00 00            	push 0x18
0x80484cb:   e9 b0 ff ff ff            	jmp 0xffffffb0
0x80484d0:   ff 25 10 b0 04 08         	jmp dword [ 0x804b010 ]
0x80484d6:   68 20 00 00 00            	push 0x20
0x80484db:   e9 a0 ff ff ff            	jmp 0xffffffa0
0x80484e0:   ff 25 14 b0 04 08         	jmp dword [ 0x804b014 ]
0x80484e6:   68 28 00 00 00            	push 0x28
0x80484eb:   e9 90 ff ff ff            	jmp 0xffffff90
0x80484f0:   ff 25 18 b0 04 08         	jmp dword [ 0x804b018 ]
0x80484f6:   68 30 00 00 00            	push 0x30
0x80484fb:   e9 80 ff ff ff            	jmp 0xffffff80
0x8048500:   ff 25 1c b0 04 08         	jmp dword [ 0x804b01c ]
0x8048506:   68 38 00 00 00            	push 0x38
0x804850b:   e9 70 ff ff ff            	jmp 0xffffff70
0x8048510:   ff 25 20 b0 04 08         	jmp dword [ 0x804b020 ]
0x8048516:   68 40 00 00 00            	push 0x40
0x804851b:   e9 60 ff ff ff            	jmp 0xffffff60
0x8048520:   ff 25 24 b0 04 08         	jmp dword [ 0x804b024 ]
0x8048526:   68 48 00 00 00            	push 0x48
0x804852b:   e9 50 ff ff ff            	jmp 0xffffff50
0x8048530:   ff 25 28 b0 04 08         	jmp dword [ 0x804b028 ]
0x8048536:   68 50 00 00 00            	push 0x50
0x804853b:   e9 40 ff ff ff            	jmp 0xffffff40
0x8048540:   ff 25 2c b0 04 08         	jmp dword [ 0x804b02c ]
0x8048546:   68 58 00 00 00            	push 0x58
0x804854b:   e9 30 ff ff ff            	jmp 0xffffff30
; section: .text
; function: _start at 0x8048550 -- 0x804857f
0x8048550:   31 ed                     	xor ebp, ebp
0x8048552:   5e                        	pop esi
0x8048553:   89 e1                     	mov ecx, esp
0x8048555:   83 e4 f0                  	and esp, 0xfffffff0
0x8048558:   50                        	push eax
0x8048559:   54                        	push esp
0x804855a:   52                        	push edx
0x804855b:   68 40 8f 04 08            	push 0x8048f40
0x8048560:   68 d0 8e 04 08            	push 0x8048ed0
0x8048565:   51                        	push ecx
0x8048566:   56                        	push esi
0x8048567:   68 46 89 04 08            	push 0x8048946
0x804856c:   e8 9f ff ff ff            	call 0x8048510 <__libc_start_main>
0x8048571:   f4                        	hlt
0x8048572:   90                        	nop
0x8048573:   90                        	nop
0x8048574:   90                        	nop
0x8048575:   90                        	nop
0x8048576:   90                        	nop
0x8048577:   90                        	nop
0x8048578:   90                        	nop
0x8048579:   90                        	nop
0x804857a:   90                        	nop
0x804857b:   90                        	nop
0x804857c:   90                        	nop
0x804857d:   90                        	nop
0x804857e:   90                        	nop
0x804857f:   90                        	nop
; function: __do_global_dtors_aux at 0x8048580 -- 0x80485df
0x8048580:   55                        	push ebp
0x8048581:   89 e5                     	mov ebp, esp
0x8048583:   53                        	push ebx
0x8048584:   83 ec 04                  	sub esp, 0x4
0x8048587:   80 3d 64 b0 04 08 00      	cmp byte [ 0x804b064 ], 0x0
0x804858e:   75 3f                     	jnz 0x80485cf <__do_global_dtors_aux+0x4f>
0x8048590:   a1 68 b0 04 08            	mov eax, dword [ 0x804b068 ]
0x8048595:   bb 20 af 04 08            	mov ebx, 0x804af20
0x804859a:   81 eb 1c af 04 08         	sub ebx, 0x804af1c
0x80485a0:   c1 fb 02                  	sar ebx, 0x2
0x80485a3:   83 eb 01                  	sub ebx, 0x1
0x80485a6:   39 d8                     	cmp eax, ebx
0x80485a8:   73 1e                     	jnc 0x80485c8 <__do_global_dtors_aux+0x48>
0x80485aa:   8d b6 00 00 00 00         	lea esi, dword [ esi + 0x0 ]
0x80485b0:   83 c0 01                  	add eax, 0x1
0x80485b3:   a3 68 b0 04 08            	mov dword [ 0x804b068 ], eax
0x80485b8:   ff 14 85 1c af 04 08      	call dword [ eax * 0x2 + 0x804af1c ]
0x80485bf:   a1 68 b0 04 08            	mov eax, dword [ 0x804b068 ]
0x80485c4:   39 d8                     	cmp eax, ebx
0x80485c6:   72 e8                     	jc 0x80485b0 <__do_global_dtors_aux+0x30>
0x80485c8:   c6 05 64 b0 04 08 01      	mov byte [ 0x804b064 ], 0x1
0x80485cf:   83 c4 04                  	add esp, 0x4
0x80485d2:   5b                        	pop ebx
0x80485d3:   5d                        	pop ebp
0x80485d4:   c3                        	ret
0x80485d5:   8d 74 26 00               	lea esi, dword [ esi + 0x0 ]
0x80485d9:   8d bc 27 00 00 00 00      	lea edi, dword [ edi + 0x0 ]
; function: frame_dummy at 0x80485e0 -- 0x8048603
0x80485e0:   55                        	push ebp
0x80485e1:   89 e5                     	mov ebp, esp
0x80485e3:   83 ec 18                  	sub esp, 0x18
0x80485e6:   a1 24 af 04 08            	mov eax, dword [ 0x804af24 ]
0x80485eb:   85 c0                     	test eax, eax
0x80485ed:   74 12                     	jz 0x8048601 <frame_dummy+0x21>
0x80485ef:   b8 00 00 00 00            	mov eax, 0x0
0x80485f4:   85 c0                     	test eax, eax
0x80485f6:   74 09                     	jz 0x8048601 <frame_dummy+0x21>
0x80485f8:   c7 04 24 24 af 04 08      	mov dword [ esp ], 0x804af24
0x80485ff:   ff d0                     	call eax
0x8048601:   c9                        	leave
0x8048602:   c3                        	ret
0x8048603:   90                        	nop
; function: ft_des at 0x8048604 -- 0x804871b
0x8048604:   55                        	push ebp
0x8048605:   89 e5                     	mov ebp, esp
0x8048607:   57                        	push edi
0x8048608:   83 ec 44                  	sub esp, 0x44
0x804860b:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x804860e:   89 04 24                  	mov dword [ esp ], eax
0x8048611:   e8 7a fe ff ff            	call 0x8048490 <strdup>
0x8048616:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x8048619:   c7 45 e8 00 00 00 00      	mov dword [ ebp + 0xffffffe8 ], 0x0
0x8048620:   c7 45 e4 00 00 00 00      	mov dword [ ebp + 0xffffffe4 ], 0x0
0x8048627:   e9 bf 00 00 00            	jmp 0x80486eb <ft_des+0xe7>
0x804862c:   83 7d e8 06               	cmp dword [ ebp + 0xffffffe8 ], 0x6
0x8048630:   75 07                     	jnz 0x8048639 <ft_des+0x35>
0x8048632:   c7 45 e8 00 00 00 00      	mov dword [ ebp + 0xffffffe8 ], 0x0
0x8048639:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x804863c:   83 e0 01                  	and eax, 0x1
0x804863f:   84 c0                     	test al, al
0x8048641:   74 4c                     	jz 0x804868f <ft_des+0x8b>
0x8048643:   c7 45 ec 00 00 00 00      	mov dword [ ebp + 0xffffffec ], 0x0
0x804864a:   eb 2e                     	jmp 0x804867a <ft_des+0x76>
0x804864c:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x804864f:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x8048652:   01 d0                     	add eax, edx
0x8048654:   0f b6 10                  	movzx edx, byte [ eax ]
0x8048657:   83 c2 01                  	add edx, 0x1
0x804865a:   88 10                     	mov byte [ eax ], dl
0x804865c:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x804865f:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x8048662:   01 d0                     	add eax, edx
0x8048664:   0f b6 00                  	movzx eax, byte [ eax ]
0x8048667:   3c 7f                     	cmp al, 0x7f
0x8048669:   75 0b                     	jnz 0x8048676 <ft_des+0x72>
0x804866b:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x804866e:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x8048671:   01 d0                     	add eax, edx
0x8048673:   c6 00 20                  	mov byte [ eax ], 0x20
0x8048676:   83 45 ec 01               	add dword [ ebp + 0xffffffec ], 0x1
0x804867a:   8b 45 e8                  	mov eax, dword [ ebp + 0xffffffe8 ]
0x804867d:   05 a0 8f 04 08            	add eax, 0x8048fa0 ; "0123456"
0x8048682:   0f b6 00                  	movzx eax, byte [ eax ]
0x8048685:   0f be c0                  	movsx eax, al
0x8048688:   3b 45 ec                  	cmp eax, dword [ ebp + 0xffffffec ]
0x804868b:   7f bf                     	jg 0x804864c <ft_des+0x48>
0x804868d:   eb 54                     	jmp 0x80486e3 <ft_des+0xdf>
0x804868f:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x8048692:   83 e0 01                  	and eax, 0x1
0x8048695:   85 c0                     	test eax, eax
0x8048697:   75 4a                     	jnz 0x80486e3 <ft_des+0xdf>
0x8048699:   c7 45 f0 00 00 00 00      	mov dword [ ebp + 0xfffffff0 ], 0x0
0x80486a0:   eb 2e                     	jmp 0x80486d0 <ft_des+0xcc>
0x80486a2:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x80486a5:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x80486a8:   01 d0                     	add eax, edx
0x80486aa:   0f b6 10                  	movzx edx, byte [ eax ]
0x80486ad:   83 ea 01                  	sub edx, 0x1
0x80486b0:   88 10                     	mov byte [ eax ], dl
0x80486b2:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x80486b5:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x80486b8:   01 d0                     	add eax, edx
0x80486ba:   0f b6 00                  	movzx eax, byte [ eax ]
0x80486bd:   3c 1f                     	cmp al, 0x1f
0x80486bf:   75 0b                     	jnz 0x80486cc <ft_des+0xc8>
0x80486c1:   8b 45 e4                  	mov eax, dword [ ebp + 0xffffffe4 ]
0x80486c4:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x80486c7:   01 d0                     	add eax, edx
0x80486c9:   c6 00 7e                  	mov byte [ eax ], 0x7e
0x80486cc:   83 45 f0 01               	add dword [ ebp + 0xfffffff0 ], 0x1
0x80486d0:   8b 45 e8                  	mov eax, dword [ ebp + 0xffffffe8 ]
0x80486d3:   05 a0 8f 04 08            	add eax, 0x8048fa0 ; "0123456"
0x80486d8:   0f b6 00                  	movzx eax, byte [ eax ]
0x80486db:   0f be c0                  	movsx eax, al
0x80486de:   3b 45 f0                  	cmp eax, dword [ ebp + 0xfffffff0 ]
0x80486e1:   7f bf                     	jg 0x80486a2 <ft_des+0x9e>
0x80486e3:   83 45 e4 01               	add dword [ ebp + 0xffffffe4 ], 0x1
0x80486e7:   83 45 e8 01               	add dword [ ebp + 0xffffffe8 ], 0x1
0x80486eb:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x80486ee:   c7 45 d4 ff ff ff ff      	mov dword [ ebp + 0xffffffd4 ], 0xffffffff
0x80486f5:   89 c2                     	mov edx, eax
0x80486f7:   b8 00 00 00 00            	mov eax, 0x0
0x80486fc:   8b 4d d4                  	mov ecx, dword [ ebp + 0xffffffd4 ]
0x80486ff:   89 d7                     	mov edi, edx
0x8048701:   f2 ae                     	repne scasb
0x8048703:   89 c8                     	mov eax, ecx
0x8048705:   f7 d0                     	not eax
0x8048707:   83 e8 01                  	sub eax, 0x1
0x804870a:   3b 45 e4                  	cmp eax, dword [ ebp + 0xffffffe4 ]
0x804870d:   0f 87 19 ff ff ff         	ja 0x804862c <ft_des+0x28>
0x8048713:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048716:   83 c4 44                  	add esp, 0x44
0x8048719:   5f                        	pop edi
0x804871a:   5d                        	pop ebp
0x804871b:   c3                        	ret
; function: syscall_open at 0x804871c -- 0x804874b
0x804871c:   55                        	push ebp
0x804871d:   89 e5                     	mov ebp, esp
0x804871f:   56                        	push esi
0x8048720:   53                        	push ebx
0x8048721:   83 ec 10                  	sub esp, 0x10
0x8048724:   c7 45 f4 ff ff ff ff      	mov dword [ ebp + 0xfffffff4 ], 0xffffffff
0x804872b:   b8 05 00 00 00            	mov eax, 0x5
0x8048730:   8b 5d 08                  	mov ebx, dword [ ebp + 0x8 ]
0x8048733:   8b 4d 0c                  	mov ecx, dword [ ebp + 0xc ]
0x8048736:   ba 00 00 00 00            	mov edx, 0x0
0x804873b:   cd 80                     	int 0x80
0x804873d:   89 c6                     	mov esi, eax
0x804873f:   89 75 f4                  	mov dword [ ebp + 0xfffffff4 ], esi
0x8048742:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048745:   83 c4 10                  	add esp, 0x10
0x8048748:   5b                        	pop ebx
0x8048749:   5e                        	pop esi
0x804874a:   5d                        	pop ebp
0x804874b:   c3                        	ret
; function: syscall_gets at 0x804874c -- 0x80487bd
0x804874c:   55                        	push ebp
0x804874d:   89 e5                     	mov ebp, esp
0x804874f:   56                        	push esi
0x8048750:   53                        	push ebx
0x8048751:   83 ec 10                  	sub esp, 0x10
0x8048754:   c7 45 f0 00 00 00 00      	mov dword [ ebp + 0xfffffff0 ], 0x0
0x804875b:   eb 3e                     	jmp 0x804879b <syscall_gets+0x4f>
0x804875d:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x8048760:   8b 55 08                  	mov edx, dword [ ebp + 0x8 ]
0x8048763:   8d 34 02                  	lea esi, dword [ edx + eax * 0x0 ]
0x8048766:   b8 03 00 00 00            	mov eax, 0x3
0x804876b:   8b 5d 10                  	mov ebx, dword [ ebp + 0x10 ]
0x804876e:   89 f1                     	mov ecx, esi
0x8048770:   ba 01 00 00 00            	mov edx, 0x1
0x8048775:   cd 80                     	int 0x80
0x8048777:   89 c6                     	mov esi, eax
0x8048779:   89 75 f4                  	mov dword [ ebp + 0xfffffff4 ], esi
0x804877c:   83 7d f4 01               	cmp dword [ ebp + 0xfffffff4 ], 0x1
0x8048780:   75 26                     	jnz 0x80487a8 <syscall_gets+0x5c>
0x8048782:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x8048785:   8b 55 08                  	mov edx, dword [ ebp + 0x8 ]
0x8048788:   01 d0                     	add eax, edx
0x804878a:   0f b6 00                  	movzx eax, byte [ eax ]
0x804878d:   3c 0a                     	cmp al, 0xa
0x804878f:   75 06                     	jnz 0x8048797 <syscall_gets+0x4b>
0x8048791:   83 45 f0 01               	add dword [ ebp + 0xfffffff0 ], 0x1
0x8048795:   eb 12                     	jmp 0x80487a9 <syscall_gets+0x5d>
0x8048797:   83 45 f0 01               	add dword [ ebp + 0xfffffff0 ], 0x1
0x804879b:   8b 45 0c                  	mov eax, dword [ ebp + 0xc ]
0x804879e:   83 e8 01                  	sub eax, 0x1
0x80487a1:   3b 45 f0                  	cmp eax, dword [ ebp + 0xfffffff0 ]
0x80487a4:   77 b7                     	ja 0x804875d <syscall_gets+0x11>
0x80487a6:   eb 01                     	jmp 0x80487a9 <syscall_gets+0x5d>
0x80487a8:   90                        	nop
0x80487a9:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x80487ac:   8b 55 08                  	mov edx, dword [ ebp + 0x8 ]
0x80487af:   01 d0                     	add eax, edx
0x80487b1:   c6 00 00                  	mov byte [ eax ], 0x0
0x80487b4:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x80487b7:   83 c4 10                  	add esp, 0x10
0x80487ba:   5b                        	pop ebx
0x80487bb:   5e                        	pop esi
0x80487bc:   5d                        	pop ebp
0x80487bd:   c3                        	ret
; function: afterSubstr at 0x80487be -- 0x8048842
0x80487be:   55                        	push ebp
0x80487bf:   89 e5                     	mov ebp, esp
0x80487c1:   83 ec 10                  	sub esp, 0x10
0x80487c4:   c7 45 f8 00 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x0
0x80487cb:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x80487ce:   89 45 fc                  	mov dword [ ebp + 0xfffffffc ], eax
0x80487d1:   eb 4e                     	jmp 0x8048821 <afterSubstr+0x63>
0x80487d3:   c7 45 f8 01 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x1
0x80487da:   c7 45 f4 00 00 00 00      	mov dword [ ebp + 0xfffffff4 ], 0x0
0x80487e1:   eb 21                     	jmp 0x8048804 <afterSubstr+0x46>
0x80487e3:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x80487e6:   03 45 0c                  	add eax, dword [ ebp + 0xc ]
0x80487e9:   0f b6 10                  	movzx edx, byte [ eax ]
0x80487ec:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x80487ef:   03 45 fc                  	add eax, dword [ ebp + 0xfffffffc ]
0x80487f2:   0f b6 00                  	movzx eax, byte [ eax ]
0x80487f5:   38 c2                     	cmp dl, al
0x80487f7:   74 07                     	jz 0x8048800 <afterSubstr+0x42>
0x80487f9:   c7 45 f8 00 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x0
0x8048800:   83 45 f4 01               	add dword [ ebp + 0xfffffff4 ], 0x1
0x8048804:   83 7d f8 01               	cmp dword [ ebp + 0xfffffff8 ], 0x1
0x8048808:   75 0d                     	jnz 0x8048817 <afterSubstr+0x59>
0x804880a:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x804880d:   03 45 0c                  	add eax, dword [ ebp + 0xc ]
0x8048810:   0f b6 00                  	movzx eax, byte [ eax ]
0x8048813:   84 c0                     	test al, al
0x8048815:   75 cc                     	jnz 0x80487e3 <afterSubstr+0x25>
0x8048817:   83 7d f8 01               	cmp dword [ ebp + 0xfffffff8 ], 0x1
0x804881b:   74 10                     	jz 0x804882d <afterSubstr+0x6f>
0x804881d:   83 45 fc 01               	add dword [ ebp + 0xfffffffc ], 0x1
0x8048821:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x8048824:   0f b6 00                  	movzx eax, byte [ eax ]
0x8048827:   84 c0                     	test al, al
0x8048829:   75 a8                     	jnz 0x80487d3 <afterSubstr+0x15>
0x804882b:   eb 01                     	jmp 0x804882e <afterSubstr+0x70>
0x804882d:   90                        	nop
0x804882e:   83 7d f8 00               	cmp dword [ ebp + 0xfffffff8 ], 0x0
0x8048832:   75 07                     	jnz 0x804883b <afterSubstr+0x7d>
0x8048834:   b8 00 00 00 00            	mov eax, 0x0
0x8048839:   eb 06                     	jmp 0x8048841 <afterSubstr+0x83>
0x804883b:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x804883e:   03 45 fc                  	add eax, dword [ ebp + 0xfffffffc ]
0x8048841:   c9                        	leave
0x8048842:   c3                        	ret
; function: isLib at 0x8048843 -- 0x8048945
0x8048843:   55                        	push ebp
0x8048844:   89 e5                     	mov ebp, esp
0x8048846:   83 ec 18                  	sub esp, 0x18
0x8048849:   8b 45 0c                  	mov eax, dword [ ebp + 0xc ]
0x804884c:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048850:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x8048853:   89 04 24                  	mov dword [ esp ], eax
0x8048856:   e8 63 ff ff ff            	call 0x80487be <afterSubstr>
0x804885b:   89 45 fc                  	mov dword [ ebp + 0xfffffffc ], eax
0x804885e:   83 7d fc 00               	cmp dword [ ebp + 0xfffffffc ], 0x0
0x8048862:   75 0a                     	jnz 0x804886e <isLib+0x2b>
0x8048864:   b8 00 00 00 00            	mov eax, 0x0
0x8048869:   e9 d6 00 00 00            	jmp 0x8048944 <isLib+0x101>
0x804886e:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x8048871:   0f b6 00                  	movzx eax, byte [ eax ]
0x8048874:   3c 2d                     	cmp al, 0x2d
0x8048876:   74 0a                     	jz 0x8048882 <isLib+0x3f>
0x8048878:   b8 00 00 00 00            	mov eax, 0x0
0x804887d:   e9 c2 00 00 00            	jmp 0x8048944 <isLib+0x101>
0x8048882:   c7 45 f8 00 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x0
0x8048889:   83 45 fc 01               	add dword [ ebp + 0xfffffffc ], 0x1
0x804888d:   eb 0b                     	jmp 0x804889a <isLib+0x57>
0x804888f:   c7 45 f8 01 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x1
0x8048896:   83 45 fc 01               	add dword [ ebp + 0xfffffffc ], 0x1
0x804889a:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x804889d:   0f b6 00                  	movzx eax, byte [ eax ]
0x80488a0:   3c 2f                     	cmp al, 0x2f
0x80488a2:   7e 0a                     	jle 0x80488ae <isLib+0x6b>
0x80488a4:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x80488a7:   0f b6 00                  	movzx eax, byte [ eax ]
0x80488aa:   3c 39                     	cmp al, 0x39
0x80488ac:   7e e1                     	jle 0x804888f <isLib+0x4c>
0x80488ae:   83 7d f8 00               	cmp dword [ ebp + 0xfffffff8 ], 0x0
0x80488b2:   74 0a                     	jz 0x80488be <isLib+0x7b>
0x80488b4:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x80488b7:   0f b6 00                  	movzx eax, byte [ eax ]
0x80488ba:   3c 2e                     	cmp al, 0x2e
0x80488bc:   74 07                     	jz 0x80488c5 <isLib+0x82>
0x80488be:   b8 00 00 00 00            	mov eax, 0x0
0x80488c3:   eb 7f                     	jmp 0x8048944 <isLib+0x101>
0x80488c5:   c7 45 f8 00 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x0
0x80488cc:   83 45 fc 01               	add dword [ ebp + 0xfffffffc ], 0x1
0x80488d0:   eb 0b                     	jmp 0x80488dd <isLib+0x9a>
0x80488d2:   c7 45 f8 01 00 00 00      	mov dword [ ebp + 0xfffffff8 ], 0x1
0x80488d9:   83 45 fc 01               	add dword [ ebp + 0xfffffffc ], 0x1
0x80488dd:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x80488e0:   0f b6 00                  	movzx eax, byte [ eax ]
0x80488e3:   3c 2f                     	cmp al, 0x2f
0x80488e5:   7e 0a                     	jle 0x80488f1 <isLib+0xae>
0x80488e7:   8b 45 fc                  	mov eax, dword [ ebp + 0xfffffffc ]
0x80488ea:   0f b6 00                  	movzx eax, byte [ eax ]
0x80488ed:   3c 39                     	cmp al, 0x39
0x80488ef:   7e e1                     	jle 0x80488d2 <isLib+0x8f>
0x80488f1:   83 7d f8 00               	cmp dword [ ebp + 0xfffffff8 ], 0x0
0x80488f5:   75 07                     	jnz 0x80488fe <isLib+0xbb>
0x80488f7:   b8 00 00 00 00            	mov eax, 0x0
0x80488fc:   eb 46                     	jmp 0x8048944 <isLib+0x101>
0x80488fe:   c7 45 f4 00 00 00 00      	mov dword [ ebp + 0xfffffff4 ], 0x0
0x8048905:   eb 26                     	jmp 0x804892d <isLib+0xea>
0x8048907:   8b 15 38 b0 04 08         	mov edx, dword [ 0x804b038 ]
0x804890d:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048910:   01 d0                     	add eax, edx
0x8048912:   0f b6 10                  	movzx edx, byte [ eax ]
0x8048915:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048918:   03 45 fc                  	add eax, dword [ ebp + 0xfffffffc ]
0x804891b:   0f b6 00                  	movzx eax, byte [ eax ]
0x804891e:   38 c2                     	cmp dl, al
0x8048920:   74 07                     	jz 0x8048929 <isLib+0xe6>
0x8048922:   b8 00 00 00 00            	mov eax, 0x0
0x8048927:   eb 1b                     	jmp 0x8048944 <isLib+0x101>
0x8048929:   83 45 f4 01               	add dword [ ebp + 0xfffffff4 ], 0x1
0x804892d:   8b 15 38 b0 04 08         	mov edx, dword [ 0x804b038 ]
0x8048933:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048936:   01 d0                     	add eax, edx
0x8048938:   0f b6 00                  	movzx eax, byte [ eax ]
0x804893b:   84 c0                     	test al, al
0x804893d:   75 c8                     	jnz 0x8048907 <isLib+0xc4>
0x804893f:   b8 01 00 00 00            	mov eax, 0x1
0x8048944:   c9                        	leave
0x8048945:   c3                        	ret
; function: main at 0x8048946 -- 0x8048ecf
0x8048946:   55                        	push ebp
0x8048947:   89 e5                     	mov ebp, esp
0x8048949:   53                        	push ebx
0x804894a:   83 e4 f0                  	and esp, 0xfffffff0
0x804894d:   81 ec 20 01 00 00         	sub esp, 0x120
0x8048953:   65                        	
0x8048954:   a1 14 00 00 00            	mov eax, dword [ 0x14 ]
0x8048959:   89 84 24 1c 01 00 00      	mov dword [ esp + 0x11c ], eax
0x8048960:   31 c0                     	xor eax, eax
0x8048962:   c7 44 24 10 00 00 00 00   	mov dword [ esp + 0x10 ], 0x0
0x804896a:   c7 44 24 0c 00 00 00 00   	mov dword [ esp + 0xc ], 0x0
0x8048972:   c7 44 24 08 01 00 00 00   	mov dword [ esp + 0x8 ], 0x1
0x804897a:   c7 44 24 04 00 00 00 00   	mov dword [ esp + 0x4 ], 0x0
0x8048982:   c7 04 24 00 00 00 00      	mov dword [ esp ], 0x0
0x8048989:   e8 b2 fb ff ff            	call 0x8048540 <ptrace>
0x804898e:   85 c0                     	test eax, eax
0x8048990:   79 16                     	jns 0x80489a8 <main+0x62>
0x8048992:   c7 04 24 a8 8f 04 08      	mov dword [ esp ], 0x8048fa8 ; "You should not reverse this"
0x8048999:   e8 42 fb ff ff            	call 0x80484e0 <puts>
0x804899e:   b8 01 00 00 00            	mov eax, 0x1
0x80489a3:   e9 0a 05 00 00            	jmp 0x8048eb2 <main+0x56c>
0x80489a8:   c7 04 24 c4 8f 04 08      	mov dword [ esp ], 0x8048fc4 ; "LD_PRELOAD"
0x80489af:   e8 1c fb ff ff            	call 0x80484d0 <getenv>
0x80489b4:   85 c0                     	test eax, eax
0x80489b6:   74 32                     	jz 0x80489ea <main+0xa4>
0x80489b8:   a1 40 b0 04 08            	mov eax, dword [ 0x804b040 ]
0x80489bd:   89 c2                     	mov edx, eax
0x80489bf:   b8 d0 8f 04 08            	mov eax, 0x8048fd0 ; "Injection Linked lib detected exit..\n"
0x80489c4:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x80489c8:   c7 44 24 08 25 00 00 00   	mov dword [ esp + 0x8 ], 0x25
0x80489d0:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x80489d8:   89 04 24                  	mov dword [ esp ], eax
0x80489db:   e8 e0 fa ff ff            	call 0x80484c0 <fwrite>
0x80489e0:   b8 01 00 00 00            	mov eax, 0x1
0x80489e5:   e9 c8 04 00 00            	jmp 0x8048eb2 <main+0x56c>
0x80489ea:   c7 44 24 04 00 00 00 00   	mov dword [ esp + 0x4 ], 0x0
0x80489f2:   c7 04 24 f6 8f 04 08      	mov dword [ esp ], 0x8048ff6 ; "/etc/ld.so.preload"
0x80489f9:   e8 02 fb ff ff            	call 0x8048500 <open>
0x80489fe:   85 c0                     	test eax, eax
0x8048a00:   7e 32                     	jle 0x8048a34 <main+0xee>
0x8048a02:   a1 40 b0 04 08            	mov eax, dword [ 0x804b040 ]
0x8048a07:   89 c2                     	mov edx, eax
0x8048a09:   b8 d0 8f 04 08            	mov eax, 0x8048fd0 ; "Injection Linked lib detected exit..\n"
0x8048a0e:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x8048a12:   c7 44 24 08 25 00 00 00   	mov dword [ esp + 0x8 ], 0x25
0x8048a1a:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x8048a22:   89 04 24                  	mov dword [ esp ], eax
0x8048a25:   e8 96 fa ff ff            	call 0x80484c0 <fwrite>
0x8048a2a:   b8 01 00 00 00            	mov eax, 0x1
0x8048a2f:   e9 7e 04 00 00            	jmp 0x8048eb2 <main+0x56c>
0x8048a34:   c7 44 24 04 00 00 00 00   	mov dword [ esp + 0x4 ], 0x0
0x8048a3c:   c7 04 24 09 90 04 08      	mov dword [ esp ], 0x8049009 ; "/proc/self/maps"
0x8048a43:   e8 d4 fc ff ff            	call 0x804871c <syscall_open>
0x8048a48:   89 44 24 14               	mov dword [ esp + 0x14 ], eax
0x8048a4c:   83 7c 24 14 ff            	cmp dword [ esp + 0x14 ], 0xffffffff
0x8048a51:   0f 85 31 04 00 00         	jnz 0x8048e88 <main+0x542>
0x8048a57:   a1 40 b0 04 08            	mov eax, dword [ 0x804b040 ]
0x8048a5c:   89 c2                     	mov edx, eax
0x8048a5e:   b8 1c 90 04 08            	mov eax, 0x804901c ; "/proc/self/maps is unaccessible, probably a LD_PRELOAD attempt exit..\n"
0x8048a63:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x8048a67:   c7 44 24 08 46 00 00 00   	mov dword [ esp + 0x8 ], 0x46
0x8048a6f:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x8048a77:   89 04 24                  	mov dword [ esp ], eax
0x8048a7a:   e8 41 fa ff ff            	call 0x80484c0 <fwrite>
0x8048a7f:   b8 01 00 00 00            	mov eax, 0x1
0x8048a84:   e9 29 04 00 00            	jmp 0x8048eb2 <main+0x56c>
0x8048a89:   c7 44 24 04 63 90 04 08   	mov dword [ esp + 0x4 ], 0x8049063 ; "libc"
0x8048a91:   8d 44 24 1c               	lea eax, dword [ esp + 0x1c ]
0x8048a95:   89 04 24                  	mov dword [ esp ], eax
0x8048a98:   e8 a6 fd ff ff            	call 0x8048843 <isLib>
0x8048a9d:   85 c0                     	test eax, eax
0x8048a9f:   74 0d                     	jz 0x8048aae <main+0x168>
0x8048aa1:   c7 44 24 10 01 00 00 00   	mov dword [ esp + 0x10 ], 0x1
0x8048aa9:   e9 db 03 00 00            	jmp 0x8048e89 <main+0x543>
0x8048aae:   83 7c 24 10 00            	cmp dword [ esp + 0x10 ], 0x0
0x8048ab3:   0f 84 d0 03 00 00         	jz 0x8048e89 <main+0x543>
0x8048ab9:   c7 44 24 04 68 90 04 08   	mov dword [ esp + 0x4 ], 0x8049068 ; "ld"
0x8048ac1:   8d 44 24 1c               	lea eax, dword [ esp + 0x1c ]
0x8048ac5:   89 04 24                  	mov dword [ esp ], eax
0x8048ac8:   e8 76 fd ff ff            	call 0x8048843 <isLib>
0x8048acd:   85 c0                     	test eax, eax
0x8048acf:   0f 84 71 03 00 00         	jz 0x8048e46 <main+0x500>
0x8048ad5:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048ada:   89 c2                     	mov edx, eax
0x8048adc:   b8 6c 90 04 08            	mov eax, 0x804906c ; "Check flag.Here is your token : "
0x8048ae1:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x8048ae5:   c7 44 24 08 20 00 00 00   	mov dword [ esp + 0x8 ], 0x20
0x8048aed:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x8048af5:   89 04 24                  	mov dword [ esp ], eax
0x8048af8:   e8 c3 f9 ff ff            	call 0x80484c0 <fwrite>
0x8048afd:   e8 ae f9 ff ff            	call 0x80484b0 <getuid>
0x8048b02:   89 44 24 18               	mov dword [ esp + 0x18 ], eax
0x8048b06:   8b 44 24 18               	mov eax, dword [ esp + 0x18 ]
0x8048b0a:   3d be 0b 00 00            	cmp eax, 0xbbe
0x8048b0f:   0f 84 b6 01 00 00         	jz 0x8048ccb <main+0x385>
0x8048b15:   3d be 0b 00 00            	cmp eax, 0xbbe
0x8048b1a:   77 4c                     	ja 0x8048b68 <main+0x222>
0x8048b1c:   3d ba 0b 00 00            	cmp eax, 0xbba
0x8048b21:   0f 84 14 01 00 00         	jz 0x8048c3b <main+0x2f5>
0x8048b27:   3d ba 0b 00 00            	cmp eax, 0xbba
0x8048b2c:   77 1f                     	ja 0x8048b4d <main+0x207>
0x8048b2e:   3d b8 0b 00 00            	cmp eax, 0xbb8
0x8048b33:   0f 84 ba 00 00 00         	jz 0x8048bf3 <main+0x2ad>
0x8048b39:   3d b8 0b 00 00            	cmp eax, 0xbb8
0x8048b3e:   0f 87 d3 00 00 00         	ja 0x8048c17 <main+0x2d1>
0x8048b44:   85 c0                     	test eax, eax
0x8048b46:   74 7e                     	jz 0x8048bc6 <main+0x280>
0x8048b48:   e9 b9 02 00 00            	jmp 0x8048e06 <main+0x4c0>
0x8048b4d:   3d bc 0b 00 00            	cmp eax, 0xbbc
0x8048b52:   0f 84 2b 01 00 00         	jz 0x8048c83 <main+0x33d>
0x8048b58:   3d bc 0b 00 00            	cmp eax, 0xbbc
0x8048b5d:   0f 87 44 01 00 00         	ja 0x8048ca7 <main+0x361>
0x8048b63:   e9 f7 00 00 00            	jmp 0x8048c5f <main+0x319>
0x8048b68:   3d c2 0b 00 00            	cmp eax, 0xbc2
0x8048b6d:   0f 84 e8 01 00 00         	jz 0x8048d5b <main+0x415>
0x8048b73:   3d c2 0b 00 00            	cmp eax, 0xbc2
0x8048b78:   77 1b                     	ja 0x8048b95 <main+0x24f>
0x8048b7a:   3d c0 0b 00 00            	cmp eax, 0xbc0
0x8048b7f:   0f 84 8e 01 00 00         	jz 0x8048d13 <main+0x3cd>
0x8048b85:   3d c0 0b 00 00            	cmp eax, 0xbc0
0x8048b8a:   0f 87 a7 01 00 00         	ja 0x8048d37 <main+0x3f1>
0x8048b90:   e9 5a 01 00 00            	jmp 0x8048cef <main+0x3a9>
0x8048b95:   3d c4 0b 00 00            	cmp eax, 0xbc4
0x8048b9a:   0f 84 03 02 00 00         	jz 0x8048da3 <main+0x45d>
0x8048ba0:   3d c4 0b 00 00            	cmp eax, 0xbc4
0x8048ba5:   0f 82 d4 01 00 00         	jc 0x8048d7f <main+0x439>
0x8048bab:   3d c5 0b 00 00            	cmp eax, 0xbc5
0x8048bb0:   0f 84 0e 02 00 00         	jz 0x8048dc4 <main+0x47e>
0x8048bb6:   3d c6 0b 00 00            	cmp eax, 0xbc6
0x8048bbb:   0f 84 24 02 00 00         	jz 0x8048de5 <main+0x49f>
0x8048bc1:   e9 40 02 00 00            	jmp 0x8048e06 <main+0x4c0>
0x8048bc6:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048bcb:   89 c2                     	mov edx, eax
0x8048bcd:   b8 90 90 04 08            	mov eax, 0x8049090 ; "You are root are you that dumb ?\n"
0x8048bd2:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x8048bd6:   c7 44 24 08 21 00 00 00   	mov dword [ esp + 0x8 ], 0x21
0x8048bde:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x8048be6:   89 04 24                  	mov dword [ esp ], eax
0x8048be9:   e8 d2 f8 ff ff            	call 0x80484c0 <fwrite>
0x8048bee:   e9 3c 02 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048bf3:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048bf8:   89 c3                     	mov ebx, eax
0x8048bfa:   c7 04 24 b2 90 04 08      	mov dword [ esp ], 0x80490b2 ; "I`fA>_88eEd:=`85h0D8HE>,D"
0x8048c01:   e8 fe f9 ff ff            	call 0x8048604 <ft_des>
0x8048c06:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048c0a:   89 04 24                  	mov dword [ esp ], eax
0x8048c0d:   e8 1e f9 ff ff            	call 0x8048530 <fputs>
0x8048c12:   e9 18 02 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048c17:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048c1c:   89 c3                     	mov ebx, eax
0x8048c1e:   c7 04 24 cc 90 04 08      	mov dword [ esp ], 0x80490cc ; "7`4Ci4=^d=J,?>i;6,7d416,7"
0x8048c25:   e8 da f9 ff ff            	call 0x8048604 <ft_des>
0x8048c2a:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048c2e:   89 04 24                  	mov dword [ esp ], eax
0x8048c31:   e8 fa f8 ff ff            	call 0x8048530 <fputs>
0x8048c36:   e9 f4 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048c3b:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048c40:   89 c3                     	mov ebx, eax
0x8048c42:   c7 04 24 e6 90 04 08      	mov dword [ esp ], 0x80490e6 ; "<>B16\\AD<C6,G_<1>^7ci>l4B"
0x8048c49:   e8 b6 f9 ff ff            	call 0x8048604 <ft_des>
0x8048c4e:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048c52:   89 04 24                  	mov dword [ esp ], eax
0x8048c55:   e8 d6 f8 ff ff            	call 0x8048530 <fputs>
0x8048c5a:   e9 d0 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048c5f:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048c64:   89 c3                     	mov ebx, eax
0x8048c66:   c7 04 24 00 91 04 08      	mov dword [ esp ], 0x8049100 ; "B8b:6,3fj7:,;bh>D@>8i:6@D"
0x8048c6d:   e8 92 f9 ff ff            	call 0x8048604 <ft_des>
0x8048c72:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048c76:   89 04 24                  	mov dword [ esp ], eax
0x8048c79:   e8 b2 f8 ff ff            	call 0x8048530 <fputs>
0x8048c7e:   e9 ac 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048c83:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048c88:   89 c3                     	mov ebx, eax
0x8048c8a:   c7 04 24 1a 91 04 08      	mov dword [ esp ], 0x804911a ; "?4d@:,C>8C60G>8:h:Gb4?l,A"
0x8048c91:   e8 6e f9 ff ff            	call 0x8048604 <ft_des>
0x8048c96:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048c9a:   89 04 24                  	mov dword [ esp ], eax
0x8048c9d:   e8 8e f8 ff ff            	call 0x8048530 <fputs>
0x8048ca2:   e9 88 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048ca7:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048cac:   89 c3                     	mov ebx, eax
0x8048cae:   c7 04 24 34 91 04 08      	mov dword [ esp ], 0x8049134 ; "G8H.6,=4k5J0<cd/D@>>B:>:4"
0x8048cb5:   e8 4a f9 ff ff            	call 0x8048604 <ft_des>
0x8048cba:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048cbe:   89 04 24                  	mov dword [ esp ], eax
0x8048cc1:   e8 6a f8 ff ff            	call 0x8048530 <fputs>
0x8048cc6:   e9 64 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048ccb:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048cd0:   89 c3                     	mov ebx, eax
0x8048cd2:   c7 04 24 4e 91 04 08      	mov dword [ esp ], 0x804914e ; "H8B8h_20B4J43><8>\\ED<;j@3"
0x8048cd9:   e8 26 f9 ff ff            	call 0x8048604 <ft_des>
0x8048cde:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048ce2:   89 04 24                  	mov dword [ esp ], eax
0x8048ce5:   e8 46 f8 ff ff            	call 0x8048530 <fputs>
0x8048cea:   e9 40 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048cef:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048cf4:   89 c3                     	mov ebx, eax
0x8048cf6:   c7 04 24 68 91 04 08      	mov dword [ esp ], 0x8049168 ; "78H:J4<4<9i_I4k0J^5>B1j`9"
0x8048cfd:   e8 02 f9 ff ff            	call 0x8048604 <ft_des>
0x8048d02:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048d06:   89 04 24                  	mov dword [ esp ], eax
0x8048d09:   e8 22 f8 ff ff            	call 0x8048530 <fputs>
0x8048d0e:   e9 1c 01 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048d13:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048d18:   89 c3                     	mov ebx, eax
0x8048d1a:   c7 04 24 82 91 04 08      	mov dword [ esp ], 0x8049182 ; "bci`mC{)jxkn<\"uD~6%g7FK`7"
0x8048d21:   e8 de f8 ff ff            	call 0x8048604 <ft_des>
0x8048d26:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048d2a:   89 04 24                  	mov dword [ esp ], eax
0x8048d2d:   e8 fe f7 ff ff            	call 0x8048530 <fputs>
0x8048d32:   e9 f8 00 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048d37:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048d3c:   89 c3                     	mov ebx, eax
0x8048d3e:   c7 04 24 9c 91 04 08      	mov dword [ esp ], 0x804919c ; "Dc6m~;}f8Cj#xFkel;#&ycfbK"
0x8048d45:   e8 ba f8 ff ff            	call 0x8048604 <ft_des>
0x8048d4a:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048d4e:   89 04 24                  	mov dword [ esp ], eax
0x8048d51:   e8 da f7 ff ff            	call 0x8048530 <fputs>
0x8048d56:   e9 d4 00 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048d5b:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048d60:   89 c3                     	mov ebx, eax
0x8048d62:   c7 04 24 b6 91 04 08      	mov dword [ esp ], 0x80491b6 ; "74H9D^3ed7k05445J0E4e;Da4"
0x8048d69:   e8 96 f8 ff ff            	call 0x8048604 <ft_des>
0x8048d6e:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048d72:   89 04 24                  	mov dword [ esp ], eax
0x8048d75:   e8 b6 f7 ff ff            	call 0x8048530 <fputs>
0x8048d7a:   e9 b0 00 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048d7f:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048d84:   89 c3                     	mov ebx, eax
0x8048d86:   c7 04 24 d0 91 04 08      	mov dword [ esp ], 0x80491d0 ; "70hCi,E44Df[A4B/J@3f<=:`D"
0x8048d8d:   e8 72 f8 ff ff            	call 0x8048604 <ft_des>
0x8048d92:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048d96:   89 04 24                  	mov dword [ esp ], eax
0x8048d99:   e8 92 f7 ff ff            	call 0x8048530 <fputs>
0x8048d9e:   e9 8c 00 00 00            	jmp 0x8048e2f <main+0x4e9>
0x8048da3:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048da8:   89 c3                     	mov ebx, eax
0x8048daa:   c7 04 24 ea 91 04 08      	mov dword [ esp ], 0x80491ea ; "8_Dw\"4#?+3i]q&;p6 gtw88EC"
0x8048db1:   e8 4e f8 ff ff            	call 0x8048604 <ft_des>
0x8048db6:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048dba:   89 04 24                  	mov dword [ esp ], eax
0x8048dbd:   e8 6e f7 ff ff            	call 0x8048530 <fputs>
0x8048dc2:   eb 6b                     	jmp 0x8048e2f <main+0x4e9>
0x8048dc4:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048dc9:   89 c3                     	mov ebx, eax
0x8048dcb:   c7 04 24 04 92 04 08      	mov dword [ esp ], 0x8049204 ; "boe]!ai0FB@.:|L6l@A?>qJ}I"
0x8048dd2:   e8 2d f8 ff ff            	call 0x8048604 <ft_des>
0x8048dd7:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048ddb:   89 04 24                  	mov dword [ esp ], eax
0x8048dde:   e8 4d f7 ff ff            	call 0x8048530 <fputs>
0x8048de3:   eb 4a                     	jmp 0x8048e2f <main+0x4e9>
0x8048de5:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048dea:   89 c3                     	mov ebx, eax
0x8048dec:   c7 04 24 20 92 04 08      	mov dword [ esp ], 0x8049220 ; "g <t61:|4_|!@IF.-62FH&G~DCK/Ekrvvdwz?v|"
0x8048df3:   e8 0c f8 ff ff            	call 0x8048604 <ft_des>
0x8048df8:   89 5c 24 04               	mov dword [ esp + 0x4 ], ebx
0x8048dfc:   89 04 24                  	mov dword [ esp ], eax
0x8048dff:   e8 2c f7 ff ff            	call 0x8048530 <fputs>
0x8048e04:   eb 29                     	jmp 0x8048e2f <main+0x4e9>
0x8048e06:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048e0b:   89 c2                     	mov edx, eax
0x8048e0d:   b8 48 92 04 08            	mov eax, 0x8049248 ; "\nNope there is no token here for you sorry. Try again :)"
0x8048e12:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x8048e16:   c7 44 24 08 38 00 00 00   	mov dword [ esp + 0x8 ], 0x38
0x8048e1e:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x8048e26:   89 04 24                  	mov dword [ esp ], eax
0x8048e29:   e8 92 f6 ff ff            	call 0x80484c0 <fwrite>
0x8048e2e:   90                        	nop
0x8048e2f:   a1 60 b0 04 08            	mov eax, dword [ 0x804b060 ]
0x8048e34:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048e38:   c7 04 24 0a 00 00 00      	mov dword [ esp ], 0xa
0x8048e3f:   e8 dc f6 ff ff            	call 0x8048520 <fputc>
0x8048e44:   eb 67                     	jmp 0x8048ead <main+0x567>
0x8048e46:   c7 44 24 04 81 92 04 08   	mov dword [ esp + 0x4 ], 0x8049281 ; "00000000 00:00 0"
0x8048e4e:   8d 44 24 1c               	lea eax, dword [ esp + 0x1c ]
0x8048e52:   89 04 24                  	mov dword [ esp ], eax
0x8048e55:   e8 64 f9 ff ff            	call 0x80487be <afterSubstr>
0x8048e5a:   85 c0                     	test eax, eax
0x8048e5c:   75 2b                     	jnz 0x8048e89 <main+0x543>
0x8048e5e:   a1 40 b0 04 08            	mov eax, dword [ 0x804b040 ]
0x8048e63:   89 c2                     	mov edx, eax
0x8048e65:   b8 94 92 04 08            	mov eax, 0x8049294 ; "LD_PRELOAD detected through memory maps exit ..\n"
0x8048e6a:   89 54 24 0c               	mov dword [ esp + 0xc ], edx
0x8048e6e:   c7 44 24 08 30 00 00 00   	mov dword [ esp + 0x8 ], 0x30
0x8048e76:   c7 44 24 04 01 00 00 00   	mov dword [ esp + 0x4 ], 0x1
0x8048e7e:   89 04 24                  	mov dword [ esp ], eax
0x8048e81:   e8 3a f6 ff ff            	call 0x80484c0 <fwrite>
0x8048e86:   eb 25                     	jmp 0x8048ead <main+0x567>
0x8048e88:   90                        	nop
0x8048e89:   8b 44 24 14               	mov eax, dword [ esp + 0x14 ]
0x8048e8d:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048e91:   c7 44 24 04 00 01 00 00   	mov dword [ esp + 0x4 ], 0x100
0x8048e99:   8d 44 24 1c               	lea eax, dword [ esp + 0x1c ]
0x8048e9d:   89 04 24                  	mov dword [ esp ], eax
0x8048ea0:   e8 a7 f8 ff ff            	call 0x804874c <syscall_gets>
0x8048ea5:   85 c0                     	test eax, eax
0x8048ea7:   0f 85 dc fb ff ff         	jnz 0x8048a89 <main+0x143>
0x8048ead:   b8 00 00 00 00            	mov eax, 0x0
0x8048eb2:   8b 94 24 1c 01 00 00      	mov edx, dword [ esp + 0x11c ]
0x8048eb9:   65                        	
0x8048eba:   33 15 14 00 00 00         	xor edx, dword [ 0x14 ]
0x8048ec0:   74 05                     	jz 0x8048ec7 <main+0x581>
0x8048ec2:   e8 d9 f5 ff ff            	call 0x80484a0 <__stack_chk_fail>
0x8048ec7:   8b 5d fc                  	mov ebx, dword [ ebp + 0xfffffffc ]
0x8048eca:   c9                        	leave
0x8048ecb:   c3                        	ret
0x8048ecc:   90                        	nop
0x8048ecd:   90                        	nop
0x8048ece:   90                        	nop
0x8048ecf:   90                        	nop
; function: __libc_csu_init at 0x8048ed0 -- 0x8048f30
0x8048ed0:   55                        	push ebp
0x8048ed1:   57                        	push edi
0x8048ed2:   56                        	push esi
0x8048ed3:   53                        	push ebx
0x8048ed4:   e8 69 00 00 00            	call 0x8048f42 <__i686.get_pc_thunk.bx>
0x8048ed9:   81 c3 1b 21 00 00         	add ebx, 0x211b
0x8048edf:   83 ec 1c                  	sub esp, 0x1c
0x8048ee2:   8b 6c 24 30               	mov ebp, dword [ esp + 0x30 ]
0x8048ee6:   8d bb 20 ff ff ff         	lea edi, dword [ ebx + 0xffffff20 ]
0x8048eec:   e8 53 f5 ff ff            	call 0x8048444 <_init>
0x8048ef1:   8d 83 20 ff ff ff         	lea eax, dword [ ebx + 0xffffff20 ]
0x8048ef7:   29 c7                     	sub edi, eax
0x8048ef9:   c1 ff 02                  	sar edi, 0x2
0x8048efc:   85 ff                     	test edi, edi
0x8048efe:   74 29                     	jz 0x8048f29 <__libc_csu_init+0x59>
0x8048f00:   31 f6                     	xor esi, esi
0x8048f02:   8d b6 00 00 00 00         	lea esi, dword [ esi + 0x0 ]
0x8048f08:   8b 44 24 38               	mov eax, dword [ esp + 0x38 ]
0x8048f0c:   89 2c 24                  	mov dword [ esp ], ebp
0x8048f0f:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048f13:   8b 44 24 34               	mov eax, dword [ esp + 0x34 ]
0x8048f17:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048f1b:   ff 94 b3 20 ff ff ff      	call dword [ ebx + esi * 0x2 + 0xffffff20 ]
0x8048f22:   83 c6 01                  	add esi, 0x1
0x8048f25:   39 fe                     	cmp esi, edi
0x8048f27:   75 df                     	jnz 0x8048f08 <__libc_csu_init+0x38>
0x8048f29:   83 c4 1c                  	add esp, 0x1c
0x8048f2c:   5b                        	pop ebx
0x8048f2d:   5e                        	pop esi
0x8048f2e:   5f                        	pop edi
0x8048f2f:   5d                        	pop ebp
0x8048f30:   c3                        	ret
; function: function_8048f31 at 0x8048f31 -- 0x8048f3f
0x8048f31:   eb 0d                     	jmp 0x8048f40 <__libc_csu_fini>
0x8048f33:   90                        	nop
0x8048f34:   90                        	nop
0x8048f35:   90                        	nop
0x8048f36:   90                        	nop
0x8048f37:   90                        	nop
0x8048f38:   90                        	nop
0x8048f39:   90                        	nop
0x8048f3a:   90                        	nop
0x8048f3b:   90                        	nop
0x8048f3c:   90                        	nop
0x8048f3d:   90                        	nop
0x8048f3e:   90                        	nop
0x8048f3f:   90                        	nop
; function: __libc_csu_fini at 0x8048f40 -- 0x8048f41
0x8048f40:   f3 c3                     	rep ret
; function: __i686.get_pc_thunk.bx at 0x8048f42 -- 0x8048f4f
0x8048f42:   8b 1c 24                  	mov ebx, dword [ esp ]
0x8048f45:   c3                        	ret
0x8048f46:   90                        	nop
0x8048f47:   90                        	nop
0x8048f48:   90                        	nop
0x8048f49:   90                        	nop
0x8048f4a:   90                        	nop
0x8048f4b:   90                        	nop
0x8048f4c:   90                        	nop
0x8048f4d:   90                        	nop
0x8048f4e:   90                        	nop
0x8048f4f:   90                        	nop
; function: __do_global_ctors_aux at 0x8048f50 -- 0x8048f7b
0x8048f50:   55                        	push ebp
0x8048f51:   89 e5                     	mov ebp, esp
0x8048f53:   53                        	push ebx
0x8048f54:   83 ec 04                  	sub esp, 0x4
0x8048f57:   a1 14 af 04 08            	mov eax, dword [ 0x804af14 ]
0x8048f5c:   83 f8 ff                  	cmp eax, 0xffffffff
0x8048f5f:   74 13                     	jz 0x8048f74 <__do_global_ctors_aux+0x24>
0x8048f61:   bb 14 af 04 08            	mov ebx, 0x804af14
0x8048f66:   66 90                     	xchg ax, ax
0x8048f68:   83 eb 04                  	sub ebx, 0x4
0x8048f6b:   ff d0                     	call eax
0x8048f6d:   8b 03                     	mov eax, dword [ ebx ]
0x8048f6f:   83 f8 ff                  	cmp eax, 0xffffffff
0x8048f72:   75 f4                     	jnz 0x8048f68 <__do_global_ctors_aux+0x18>
0x8048f74:   83 c4 04                  	add esp, 0x4
0x8048f77:   5b                        	pop ebx
0x8048f78:   5d                        	pop ebp
0x8048f79:   c3                        	ret
0x8048f7a:   90                        	nop
0x8048f7b:   90                        	nop
; section: .fini
; function: _fini at 0x8048f7c -- 0x8048f84
0x8048f7c:   53                        	push ebx
0x8048f7d:   83 ec 08                  	sub esp, 0x8
0x8048f80:   e8 00 00 00 00            	call 0x8048f85 <function_8048f85>
; function: function_8048f85 at 0x8048f85 -- 0x8048f95
0x8048f85:   5b                        	pop ebx
0x8048f86:   81 c3 6f 20 00 00         	add ebx, 0x206f
0x8048f8c:   e8 ef f5 ff ff            	call 0x8048580 <__do_global_dtors_aux>
0x8048f91:   83 c4 08                  	add esp, 0x8
0x8048f94:   5b                        	pop ebx
0x8048f95:   c3                        	ret

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x80481ac:   03 00 00 00 0d 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 23 02 22 0d 00 00 00  0e 00 00 00 00 00 00 00   |.#."............|
0x80481cc:   29 1d 8c 1c 38 f2 8b 1c  ad 4b e3 c0               |)...8....K..    |
; section: .dynsym
0x80481d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481e8:   3a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |:...............|
0x80481f8:   29 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |)...............|
0x8048208:   62 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |b...............|
0x8048218:   70 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |p...............|
0x8048228:   54 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |T...............|
0x8048238:   4f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |O...............|
0x8048248:   01 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x8048258:   77 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |w...............|
0x8048268:   7c 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   ||...............|
0x8048278:   48 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |H...............|
0x8048288:   4e 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |N...............|
0x8048298:   69 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |i...............|
0x80482a8:   41 00 00 00 60 b0 04 08  04 00 00 00 11 00 19 00   |A...`...........|
0x80482b8:   5b 00 00 00 40 b0 04 08  04 00 00 00 11 00 19 00   |[...@...........|
0x80482c8:   1a 00 00 00 9c 8f 04 08  04 00 00 00 11 00 0f 00   |................|
; section: .dynstr
0x80482d8:   00 5f 5f 67 6d 6f 6e 5f  73 74 61 72 74 5f 5f 00   |.__gmon_start__.|
0x80482e8:   6c 69 62 63 2e 73 6f 2e  36 00 5f 49 4f 5f 73 74   |libc.so.6._IO_st|
0x80482f8:   64 69 6e 5f 75 73 65 64  00 5f 5f 73 74 61 63 6b   |din_used.__stack|
0x8048308:   5f 63 68 6b 5f 66 61 69  6c 00 73 74 72 64 75 70   |_chk_fail.strdup|
0x8048318:   00 73 74 64 6f 75 74 00  66 70 75 74 63 00 66 70   |.stdout.fputc.fp|
0x8048328:   75 74 73 00 67 65 74 65  6e 76 00 73 74 64 65 72   |uts.getenv.stder|
0x8048338:   72 00 67 65 74 75 69 64  00 70 74 72 61 63 65 00   |r.getuid.ptrace.|
0x8048348:   66 77 72 69 74 65 00 6f  70 65 6e 00 5f 5f 6c 69   |fwrite.open.__li|
0x8048358:   62 63 5f 73 74 61 72 74  5f 6d 61 69 6e 00 47 4c   |bc_start_main.GL|
0x8048368:   49 42 43 5f 32 2e 34 00  47 4c 49 42 43 5f 32 2e   |IBC_2.4.GLIBC_2.|
0x8048378:   30 00                                              |0.              |
; section: .gnu.version
0x804837a:   00 00 02 00 03 00 02 00  02 00 02 00 02 00 00 00   |................|
0x804838a:   02 00 02 00 02 00 02 00  02 00 02 00 02 00 01 00   |................|
; section: .gnu.version_r
0x804839c:   01 00 02 00 10 00 00 00  10 00 00 00 00 00 00 00   |................|
0x80483ac:   14 69 69 0d 00 00 03 00  8e 00 00 00 10 00 00 00   |.ii.............|
0x80483bc:   10 69 69 0d 00 00 02 00  98 00 00 00 00 00 00 00   |.ii.............|
; section: .rel.dyn
0x80483cc:   f0 af 04 08 06 07 00 00  40 b0 04 08 05 0e 00 00   |........@.......|
0x80483dc:   60 b0 04 08 05 0d 00 00                            |`.......        |
; section: .rel.plt
0x80483e4:   00 b0 04 08 07 01 00 00  04 b0 04 08 07 02 00 00   |................|
0x80483f4:   08 b0 04 08 07 03 00 00  0c b0 04 08 07 04 00 00   |................|
0x8048404:   10 b0 04 08 07 05 00 00  14 b0 04 08 07 06 00 00   |................|
0x8048414:   18 b0 04 08 07 07 00 00  1c b0 04 08 07 08 00 00   |................|
0x8048424:   20 b0 04 08 07 09 00 00  24 b0 04 08 07 0a 00 00   | .......$.......|
0x8048434:   28 b0 04 08 07 0b 00 00  2c b0 04 08 07 0c 00 00   |(.......,.......|
; section: .rodata
0x8048f98:   03 00 00 00 01 00 02 00                            |........        |
0x8048fa0:   30 31 32 33 34 35 36 00                            |0123456.        |   "0123456"
0x8048fa8:   59 6f 75 20 73 68 6f 75  6c 64 20 6e 6f 74 20 72   |You should not r|   "You should not reverse this"
0x8048fb8:   65 76 65 72 73 65 20 74  68 69 73 00               |everse this.    |
0x8048fc4:   4c 44 5f 50 52 45 4c 4f  41 44 00                  |LD_PRELOAD.     |   "LD_PRELOAD"
0x8048fcf:   00                                                 |.               |
0x8048fd0:   49 6e 6a 65 63 74 69 6f  6e 20 4c 69 6e 6b 65 64   |Injection Linked|   "Injection Linked lib detected exit..\n"
0x8048fe0:   20 6c 69 62 20 64 65 74  65 63 74 65 64 20 65 78   | lib detected ex|
0x8048ff0:   69 74 2e 2e 0a 00                                  |it....          |
0x8048ff6:   2f 65 74 63 2f 6c 64 2e  73 6f 2e 70 72 65 6c 6f   |/etc/ld.so.prelo|   "/etc/ld.so.preload"
0x8049006:   61 64 00                                           |ad.             |
0x8049009:   2f 70 72 6f 63 2f 73 65  6c 66 2f 6d 61 70 73 00   |/proc/self/maps.|   "/proc/self/maps"
0x8049019:   00 00 00                                           |...             |
0x804901c:   2f 70 72 6f 63 2f 73 65  6c 66 2f 6d 61 70 73 20   |/proc/self/maps |   "/proc/self/maps is unaccessible, probably a LD_PRELOAD attempt exit..\n"
0x804902c:   69 73 20 75 6e 61 63 63  65 73 73 69 62 6c 65 2c   |is unaccessible,|
0x804903c:   20 70 72 6f 62 61 62 6c  79 20 61 20 4c 44 5f 50   | probably a LD_P|
0x804904c:   52 45 4c 4f 41 44 20 61  74 74 65 6d 70 74 20 65   |RELOAD attempt e|
0x804905c:   78 69 74 2e 2e 0a 00                               |xit....         |
0x8049063:   6c 69 62 63 00                                     |libc.           |   "libc"
0x8049068:   6c 64 00                                           |ld.             |   "ld"
0x804906b:   00                                                 |.               |
0x804906c:   43 68 65 63 6b 20 66 6c  61 67 2e 48 65 72 65 20   |Check flag.Here |   "Check flag.Here is your token : "
0x804907c:   69 73 20 79 6f 75 72 20  74 6f 6b 65 6e 20 3a 20   |is your token : |
0x804908c:   00                                                 |.               |
0x804908d:   00 00 00                                           |...             |
0x8049090:   59 6f 75 20 61 72 65 20  72 6f 6f 74 20 61 72 65   |You are root are|   "You are root are you that dumb ?\n"
0x80490a0:   20 79 6f 75 20 74 68 61  74 20 64 75 6d 62 20 3f   | you that dumb ?|
0x80490b0:   0a 00                                              |..              |
0x80490b2:   49 60 66 41 3e 5f 38 38  65 45 64 3a 3d 60 38 35   |I`fA>_88eEd:=`85|   "I`fA>_88eEd:=`85h0D8HE>,D"
0x80490c2:   68 30 44 38 48 45 3e 2c  44 00                     |h0D8HE>,D.      |
0x80490cc:   37 60 34 43 69 34 3d 5e  64 3d 4a 2c 3f 3e 69 3b   |7`4Ci4=^d=J,?>i;|   "7`4Ci4=^d=J,?>i;6,7d416,7"
0x80490dc:   36 2c 37 64 34 31 36 2c  37 00                     |6,7d416,7.      |
0x80490e6:   3c 3e 42 31 36 5c 41 44  3c 43 36 2c 47 5f 3c 31   |<>B16\AD<C6,G_<1|   "<>B16\\AD<C6,G_<1>^7ci>l4B"
0x80490f6:   3e 5e 37 63 69 3e 6c 34  42 00                     |>^7ci>l4B.      |
0x8049100:   42 38 62 3a 36 2c 33 66  6a 37 3a 2c 3b 62 68 3e   |B8b:6,3fj7:,;bh>|   "B8b:6,3fj7:,;bh>D@>8i:6@D"
0x8049110:   44 40 3e 38 69 3a 36 40  44 00                     |D@>8i:6@D.      |
0x804911a:   3f 34 64 40 3a 2c 43 3e  38 43 36 30 47 3e 38 3a   |?4d@:,C>8C60G>8:|   "?4d@:,C>8C60G>8:h:Gb4?l,A"
0x804912a:   68 3a 47 62 34 3f 6c 2c  41 00                     |h:Gb4?l,A.      |
0x8049134:   47 38 48 2e 36 2c 3d 34  6b 35 4a 30 3c 63 64 2f   |G8H.6,=4k5J0<cd/|   "G8H.6,=4k5J0<cd/D@>>B:>:4"
0x8049144:   44 40 3e 3e 42 3a 3e 3a  34 00                     |D@>>B:>:4.      |
0x804914e:   48 38 42 38 68 5f 32 30  42 34 4a 34 33 3e 3c 38   |H8B8h_20B4J43><8|   "H8B8h_20B4J43><8>\\ED<;j@3"
0x804915e:   3e 5c 45 44 3c 3b 6a 40  33 00                     |>\ED<;j@3.      |
0x8049168:   37 38 48 3a 4a 34 3c 34  3c 39 69 5f 49 34 6b 30   |78H:J4<4<9i_I4k0|   "78H:J4<4<9i_I4k0J^5>B1j`9"
0x8049178:   4a 5e 35 3e 42 31 6a 60  39 00                     |J^5>B1j`9.      |
0x8049182:   62 63 69 60 6d 43 7b 29  6a 78 6b 6e 3c 22 75 44   |bci`mC{)jxkn<"uD|   "bci`mC{)jxkn<\"uD~6%g7FK`7"
0x8049192:   7e 36 25 67 37 46 4b 60  37 00                     |~6%g7FK`7.      |
0x804919c:   44 63 36 6d 7e 3b 7d 66  38 43 6a 23 78 46 6b 65   |Dc6m~;}f8Cj#xFke|   "Dc6m~;}f8Cj#xFkel;#&ycfbK"
0x80491ac:   6c 3b 23 26 79 63 66 62  4b 00                     |l;#&ycfbK.      |
0x80491b6:   37 34 48 39 44 5e 33 65  64 37 6b 30 35 34 34 35   |74H9D^3ed7k05445|   "74H9D^3ed7k05445J0E4e;Da4"
0x80491c6:   4a 30 45 34 65 3b 44 61  34 00                     |J0E4e;Da4.      |
0x80491d0:   37 30 68 43 69 2c 45 34  34 44 66 5b 41 34 42 2f   |70hCi,E44Df[A4B/|   "70hCi,E44Df[A4B/J@3f<=:`D"
0x80491e0:   4a 40 33 66 3c 3d 3a 60  44 00                     |J@3f<=:`D.      |
0x80491ea:   38 5f 44 77 22 34 23 3f  2b 33 69 5d 71 26 3b 70   |8_Dw"4#?+3i]q&;p|   "8_Dw\"4#?+3i]q&;p6 gtw88EC"
0x80491fa:   36 20 67 74 77 38 38 45  43 00                     |6 gtw88EC.      |
0x8049204:   62 6f 65 5d 21 61 69 30  46 42 40 2e 3a 7c 4c 36   |boe]!ai0FB@.:|L6|   "boe]!ai0FB@.:|L6l@A?>qJ}I"
0x8049214:   6c 40 41 3f 3e 71 4a 7d  49 00                     |l@A?>qJ}I.      |
0x804921e:   00 00                                              |..              |
0x8049220:   67 20 3c 74 36 31 3a 7c  34 5f 7c 21 40 49 46 2e   |g <t61:|4_|!@IF.|   "g <t61:|4_|!@IF.-62FH&G~DCK/Ekrvvdwz?v|"
0x8049230:   2d 36 32 46 48 26 47 7e  44 43 4b 2f 45 6b 72 76   |-62FH&G~DCK/Ekrv|
0x8049240:   76 64 77 7a 3f 76 7c 00                            |vdwz?v|.        |
0x8049248:   0a 4e 6f 70 65 20 74 68  65 72 65 20 69 73 20 6e   |.Nope there is n|   "\nNope there is no token here for you sorry. Try again :)"
0x8049258:   6f 20 74 6f 6b 65 6e 20  68 65 72 65 20 66 6f 72   |o token here for|
0x8049268:   20 79 6f 75 20 73 6f 72  72 79 2e 20 54 72 79 20   | you sorry. Try |
0x8049278:   61 67 61 69 6e 20 3a 29  00                        |again :).       |
0x8049281:   30 30 30 30 30 30 30 30  20 30 30 3a 30 30 20 30   |00000000 00:00 0|   "00000000 00:00 0"
0x8049291:   00                                                 |.               |
0x8049292:   00 00                                              |..              |
0x8049294:   4c 44 5f 50 52 45 4c 4f  41 44 20 64 65 74 65 63   |LD_PRELOAD detec|   "LD_PRELOAD detected through memory maps exit ..\n"
0x80492a4:   74 65 64 20 74 68 72 6f  75 67 68 20 6d 65 6d 6f   |ted through memo|
0x80492b4:   72 79 20 6d 61 70 73 20  65 78 69 74 20 2e 2e 0a   |ry maps exit ...|
0x80492c4:   00                                                 |.               |
0x80492c5:   2e 73 6f 0a 00                                     |.so..           |   ".so\n"
; section: .eh_frame_hdr
0x80492cc:   01 1b 03 3b 58 00 00 00  0a 00 00 00 b4 f1 ff ff   |...;X...........|
0x80492dc:   74 00 00 00 38 f3 ff ff  98 00 00 00 50 f4 ff ff   |t...8.......P...|
0x80492ec:   c0 00 00 00 80 f4 ff ff  e8 00 00 00 f2 f4 ff ff   |................|
0x80492fc:   10 01 00 00 77 f5 ff ff  30 01 00 00 7a f6 ff ff   |....w...0...z...|
0x804930c:   50 01 00 00 04 fc ff ff  78 01 00 00 74 fc ff ff   |P.......x...t...|
0x804931c:   b4 01 00 00 76 fc ff ff  c8 01 00 00               |....v.......    |
; section: .eh_frame
0x8049328:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x8049338:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x8049348:   38 f1 ff ff d0 00 00 00  00 0e 08 46 0e 0c 4a 0f   |8..........F..J.|
0x8049358:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 24 00 00 00   |.t.x.?.;*2$"$...|
0x8049368:   40 00 00 00 98 f2 ff ff  18 01 00 00 00 41 0e 08   |@............A..|
0x8049378:   85 02 42 0d 05 4a 87 03  03 09 01 c7 41 0c 04 04   |..B..J......A...|
0x8049388:   c5 00 00 00 24 00 00 00  68 00 00 00 88 f3 ff ff   |....$...h.......|
0x8049398:   30 00 00 00 00 41 0e 08  85 02 42 0d 05 4c 83 04   |0....A....B..L..|
0x80493a8:   86 03 5e c3 41 c6 41 0c  04 04 c5 00 24 00 00 00   |..^.A.A.....$...|
0x80493b8:   90 00 00 00 90 f3 ff ff  72 00 00 00 00 41 0e 08   |........r....A..|
0x80493c8:   85 02 42 0d 05 4e 83 04  86 03 02 5e c3 41 c6 41   |..B..N.....^.A.A|
0x80493d8:   0c 04 04 c5 1c 00 00 00  b8 00 00 00 da f3 ff ff   |................|
0x80493e8:   85 00 00 00 00 41 0e 08  85 02 42 0d 05 02 81 c5   |.....A....B.....|
0x80493f8:   0c 04 04 00 1c 00 00 00  d8 00 00 00 3f f4 ff ff   |............?...|
0x8049408:   03 01 00 00 00 41 0e 08  85 02 42 0d 05 02 ff c5   |.....A....B.....|
0x8049418:   0c 04 04 00 24 00 00 00  f8 00 00 00 22 f5 ff ff   |....$......."...|
0x8049428:   86 05 00 00 00 41 0e 08  85 02 42 0d 05 02 40 83   |.....A....B...@.|
0x8049438:   03 03 42 05 c5 0c 04 04  c3 00 00 00 38 00 00 00   |..B.........8...|
0x8049448:   20 01 00 00 84 fa ff ff  61 00 00 00 00 41 0e 08   | .......a....A..|
0x8049458:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x8049468:   05 4e 0e 30 02 4a 0e 14  41 0e 10 c3 41 0e 0c c6   |.N.0.J..A...A...|
0x8049478:   41 0e 08 c7 41 0e 04 c5  10 00 00 00 5c 01 00 00   |A...A.......\...|
0x8049488:   b8 fa ff ff 02 00 00 00  00 00 00 00 10 00 00 00   |................|
0x8049498:   70 01 00 00 a6 fa ff ff  04 00 00 00 00 00 00 00   |p...............|
0x80494a8:   00 00 00 00                                        |....            |
; section: .ctors
0x804af14:   ff ff ff ff 00 00 00 00                            |........        |
; section: .dtors
0x804af1c:   ff ff ff ff 00 00 00 00                            |........        |
; section: .jcr
0x804af24:   00 00 00 00                                        |....            |
; section: .dynamic
0x804af28:   01 00 00 00 10 00 00 00  0c 00 00 00 44 84 04 08   |............D...|
0x804af38:   0d 00 00 00 7c 8f 04 08  f5 fe ff 6f ac 81 04 08   |....|......o....|
0x804af48:   05 00 00 00 d8 82 04 08  06 00 00 00 d8 81 04 08   |................|
0x804af58:   0a 00 00 00 a2 00 00 00  0b 00 00 00 10 00 00 00   |................|
0x804af68:   15 00 00 00 00 00 00 00  03 00 00 00 f4 af 04 08   |................|
0x804af78:   02 00 00 00 60 00 00 00  14 00 00 00 11 00 00 00   |....`...........|
0x804af88:   17 00 00 00 e4 83 04 08  11 00 00 00 cc 83 04 08   |................|
0x804af98:   12 00 00 00 18 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804afa8:   fe ff ff 6f 9c 83 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804afb8:   f0 ff ff 6f 7a 83 04 08  00 00 00 00 00 00 00 00   |...oz...........|
0x804afc8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afe8:   00 00 00 00 00 00 00 00                            |........        |
; section: .got
0x804aff0:   00 00 00 00                                        |....            |
; section: .got.plt
0x804aff4:   28 af 04 08 00 00 00 00  00 00 00 00 96 84 04 08   |(...............|
0x804b004:   a6 84 04 08 b6 84 04 08  c6 84 04 08 d6 84 04 08   |................|
0x804b014:   e6 84 04 08 f6 84 04 08  06 85 04 08 16 85 04 08   |................|
0x804b024:   26 85 04 08 36 85 04 08  46 85 04 08               |&...6...F...    |
; section: .data
0x804b030:   00 00 00 00 00 00 00 00  c5 92 04 08               |............    |
